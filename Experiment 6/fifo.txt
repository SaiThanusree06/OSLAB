#include <stdio.h>

int fr[3]; // Frame for storing pages
void display();

int main() {
    int i, j, page[12] = {2, 3, 2, 1, 5, 2, 4, 5, 3, 2, 5, 2};
    int flag1, flag2, pf = 0, frsize = 3, top = 0;

    // Initialize the frame with -1
    for (i = 0; i < frsize; i++) {
        fr[i] = -1;
    }

    for (j = 0; j < 12; j++) {
        flag1 = 0; // Page hit flag
        flag2 = 0; // Frame available flag

        // Check if the page is already in the frame
        for (i = 0; i < frsize; i++) {
            if (fr[i] == page[j]) {
                flag1 = 1; // Page hit
                flag2 = 1; // No need to replace
                break;
            }
        }

        // If page is not found in frame, find a free frame
        if (flag1 == 0) {
            for (i = 0; i < frsize; i++) {
                if (fr[i] == -1) {
                    fr[i] = page[j]; // Allocate free frame
                    flag2 = 1; // Page allocated
                    break;
                }
            }
        }

        // If no free frame was found, replace the oldest page
        if (flag2 == 0) {
            fr[top] = page[j]; // Replace the oldest page
            top++;
            pf++; // Increase page fault count
            if (top >= frsize) {
                top = 0; // Wrap around the frame index
            }
        }

        // Display the current frame status
        display();
    }

    printf("Number of page faults: %d\n", pf);
    return 0; // Return 0 to indicate successful completion
}

void display() {
    int i;
    printf("\nCurrent Frame: ");
    for (i = 0; i < 3; i++) {
        printf("%d\t", fr[i]);
    }
    printf("\n");
}
